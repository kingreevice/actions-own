name: Build Cheerio for JSBox

on:
  schedule:
    - cron: "0 0 * * *"  # 每天运行一次（可以根据需要调整）
  workflow_dispatch:  # 手动触发

jobs:
  build-cheerio:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码仓库
    - name: Checkout the repository
      uses: actions/checkout@v3

    # 2. 安装 Node.js 环境
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # 3. 安装最新版本的 Cheerio 和依赖
    - name: Install Cheerio and dependencies
      run: |
        npm install cheerio@latest --save  # 自动安装最新的 Cheerio
        npm install webpack webpack-cli --save-dev  # 安装 Webpack

    # 4. 创建 Webpack 配置文件
    - name: Create Webpack config file
      run: |
        echo "
        const path = require('path');

        module.exports = {
          entry: './node_modules/cheerio/lib/cheerio.js', // Cheerio 的入口文件
          output: {
            path: path.resolve(__dirname, 'dist'),
            filename: 'cheerio-jsbox.js', // 输出文件名
            library: 'cheerio', // 让 Cheerio 作为全局库
            libraryTarget: 'umd', // 使其兼容多种环境
          },
          target: 'web', // 目标平台设置为 web
        };
        " > webpack.config.js

    # 5. 使用 Webpack 打包 Cheerio
    - name: Build Cheerio using Webpack
      run: |
        npx webpack --config webpack.config.js

    # 6. 上传打包后的文件到 GitHub Release
    - name: Create Release
      id: release
      uses: actions/create-release@v1
      with:
        tag_name: 'v1.0.0'
        release_name: 'Cheerio Build for JSBox'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: dist/cheerio-jsbox.js
        asset_name: cheerio-jsbox.js
        asset_content_type: application/javascript
